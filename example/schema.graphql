directive @reverse on FIELD | FIELD_DEFINITION
directive @filter(func: String) on FIELD | FIELD_DEFINITION
directive @facets(aliases: String) on FIELD | FIELD_DEFINITION
directive @var(val: String) on FIELD | FIELD_DEFINITION

type Person {
	id: String @var
	email: String @reverse
	name: String @facets
	mobile: String
	mobile_since: String @facets
	car_since: String @facets
	car: String
	friend: [Person]
}

type Query {
	getAlice(func: String): [Person]
}

input PersonInput {
	uid: String!
	name: String
	mobile: String
	car: String
	rated: [MovieInput]
	friend: [PersonInput]
	dgraph_type: String
	dgraph_facets: FacetsInput
}

input FacetsInput {
	name: String
	friend: String
	mobile: String
	car: String
	rating: String
}

input MovieInput {
	uid: String!
	dgraph_type: String
	dgraph_facets: FacetsInput
}

input RDF {
	payload: String
}

input upsertUserInput {
	uid: String
	name: String
	email: String
	dgraph_type: String
}

type Mutation {
	addDataset(input: RDF): String
	addPerson(input: [PersonInput]): String
	upsertUser(func: String, type: String, input: upsertUserInput!): Person @filter
}
